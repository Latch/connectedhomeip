# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/zephyr.gni")

import("${chip_root}/src/platform/device.gni")
import("${chip_root}/src/platform/Zephyr/args.gni")

assert(chip_device_platform == "zephyr")

static_library("Zephyr") {
  sources = [
    "../SingletonConfigurationManager.cpp",
    "BLEManagerImpl.cpp",
    "ConfigurationManagerImpl.cpp",
    "DiagnosticDataProviderImpl.cpp",
    "DiagnosticDataProviderImpl.h",
    "KeyValueStoreManagerImpl.cpp",
    "Logging.cpp",
    "PlatformManagerImpl.cpp",
    "SysHeapMalloc.h",
    "SystemTimeSupport.cpp",
    "ZephyrConfig.cpp",
    "ZephyrConfig.h",
    "BLEManagerImpl.h",
    "BlePlatformConfig.h",
    "CHIPDevicePlatformConfig.h",
    "CHIPDevicePlatformEvent.h",
    "CHIPPlatformConfig.h",
    "ConfigurationManagerImpl.h",
    "ConnectivityManagerImpl.cpp",
    "ConnectivityManagerImpl.h",
    "DeviceNetworkProvisioningDelegateImpl.cpp",
    "DeviceNetworkProvisioningDelegateImpl.h",
    "InetPlatformConfig.h",
    "KeyValueStoreManagerImpl.h",
    "PlatformManagerImpl.h",
    "SystemPlatformConfig.h",
  ]

  public_deps = [ "${chip_root}/src/platform:platform_base" ]

  if (chip_enable_openthread) {
    sources += [
      "../OpenThread/OpenThreadUtils.cpp",
      "ThreadStackManagerImpl.cpp",
      "ThreadStackManagerImpl.h",
    ]

    if (chip_mdns == "platform") {
      sources += [ "../OpenThread/DnssdImpl.cpp" ]
      deps = [ "${chip_root}/src/lib/dnssd:platform_header" ]
    }
  }

  if (chip_enable_nfc) {
    sources += [
      "NFCManagerImpl.cpp",
      "NFCManagerImpl.h",
    ]
  }

  if (chip_malloc_sys_heap) {
    sources += [ "SysHeapMalloc.cpp" ]
  }
}
